"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url # Import dj_database_url to parse the DATABASE_URL
from dotenv import load_dotenv
load_dotenv() # Load environment variables from .env file

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")
if not SECRET_KEY:
    raise Exception("SECRET_KEY not found in environment variables")


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "False").lower() in ("true", "1", "yes")


ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin', 
    'django.contrib.auth', # Required for auth
    'django.contrib.contenttypes', # Required for auth
    'django.contrib.sessions', # Required for sessions
    'django.contrib.messages', # Required for messages framework
    'django.contrib.staticfiles', # Required for static files
    'corsheaders', # CORS headers for cross-origin requests
    'rest_framework', # Django REST framework
]

# Custom apps for authentication and rate limiting
INSTALLED_APPS += ['auth_app', 'ratelimit']

# Middleware to handle CORS and security headers
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', # CORS middleware
    'django.middleware.security.SecurityMiddleware', # Security middleware
    'app.middleware.security_headers.SecurityHeadersMiddleware', # Custom security headers middleware
    'django.contrib.sessions.middleware.SessionMiddleware', # Session middleware
    'django.middleware.common.CommonMiddleware', # Common middleware
    'django.middleware.csrf.CsrfViewMiddleware', # CSRF middleware
    'django.contrib.auth.middleware.AuthenticationMiddleware', # Authentication middleware
    'django.contrib.messages.middleware.MessageMiddleware', # Messages middleware
    'django.middleware.clickjacking.XFrameOptionsMiddleware', # Clickjacking protection
    'app.middleware.jwt_cookie_auth.JWTAuthenticationMiddleware', # Custom JWT authentication middleware
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Overwrite the default setting for deploying to production
DATABASE_URL = os.getenv('DATABASE_URL')
if DATABASE_URL:
    DATABASES['default'] = dj_database_url.parse(DATABASE_URL)

# Configure Django REST Framework
REST_FRAMEWORK = {
    # Use JWT authentication for API endpoints
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    # Configure throttling settings for API rate limiting
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.UserRateThrottle',
        'rest_framework.throttling.AnonRateThrottle',
    ],
    # Set default throttle rates
    'DEFAULT_THROTTLE_RATES': {
        'user': '500/day',
        'anon': '50/hour',
    },
}

# Configure JWT settings
from datetime import timedelta
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),  # Token expires in 5 minutes
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),  # Refresh token expires in 1 day
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'AUTH_HEADER_TYPES': ('Bearer',),
}
INSTALLED_APPS += ['rest_framework_simplejwt.token_blacklist'] # Token blacklist app for JWT

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'auth_app.validators.CustomComplexityValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOW_ALL_ORIGINS = False
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # React dev server
]

# Add secure cookie settings for production
CSRF_COOKIE_SECURE = False  # Set to True in production with HTTPS
SESSION_COOKIE_SECURE = False # Set to True in production with HTTPS

if not DEBUG:
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_HSTS_SECONDS = 31536000
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
